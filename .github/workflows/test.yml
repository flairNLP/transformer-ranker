name: Tests

on:
  push:
    branches: [ "main" ]
    paths-ignore:
    - "examples/**"
    - ".gitignore"
    - "README.md"
    - "LICENSE"
  pull_request:
    branches: [ "main" ]
    paths-ignore:
    - "examples/**"
    - ".gitignore"
    - "README.md"
    - "LICENSE"

jobs:
  run:
    name: "Run Tests"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - uses: "actions/cache@v4"
      id: "restore-cache"
      with:
        key: "venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}"
        path: .venv/

    - name: "Create a virtual environment"
      if: "steps.restore-cache.outputs.cache-hit == false"
      run: |
        python -m venv .venv
        .venv/bin/python -m pip install --upgrade pip setuptools wheel pytest
        .venv/bin/python -m pip install -r requirements.txt

    - name: Print Package Versions
      run: .venv/bin/python -m pip freeze

    - name: Run pytest
      run: .venv/bin/python -m pytest
